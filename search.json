[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "KAIST Design, Build",
    "section": "",
    "text": "0.1 Welcome",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Home</span>"
    ]
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "KAIST Design, Build",
    "section": "",
    "text": "2024년 1학기 카이스트 공학생물학대학원 설계제작 강의 노트\ngithub site: https://github.com/greendaygh/kaist_design_build_2024\nwebsite: https://greendaygh.github.io/kaist_design_build_2024/",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Home</span>"
    ]
  },
  {
    "objectID": "index.html#환경",
    "href": "index.html#환경",
    "title": "KAIST Design, Build",
    "section": "0.2 환경",
    "text": "0.2 환경\n\n실습 환경은 colab을 활용하며 파일 저장 등은 구글 드라이브 활용",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Home</span>"
    ]
  },
  {
    "objectID": "design.html",
    "href": "design.html",
    "title": "2  Design",
    "section": "",
    "text": "2.1 Environment\n!ls\n\nREADME.md    data      docs    index.qmd\n_quarto.yml  design.ipynb  images  seq_analysis.ipynb",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#environment",
    "href": "design.html#environment",
    "title": "2  Design",
    "section": "",
    "text": "conda\ndocker\ncolab\nTo make google drive as colab working directory\n\nfrom google.colab import drive\ndrive.mount('/content/drive')\n\nChange working directory\n\nimport os\nos.chdir('/content/drive/MyDrive/design_build')\n!pwd\n!wget https://media.addgene.org/snapgene-media/v1.7.9-0-g88a3305/sequences/222046/51c2cfab-a3b4-4d62-98df-0c77ec21164e/addgene-plasmid-50005-sequence-222046.gbk",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#biopython",
    "href": "design.html#biopython",
    "title": "2  Design",
    "section": "2.2 Biopython",
    "text": "2.2 Biopython\nBiopython is a collection of freely available Python tools for computational biology and bioinformatics.\n\nfrom Bio import SeqIO\nfrom pandas import DataFrame\n\nrecords = SeqIO.read(\"data/parts/addgene-plasmid-50005-sequence-222046.gbk\", \"genbank\")\n\nfeatures = []\nfor feature in records.features:\n    features.append({\n        \"Label\": feature.qualifiers.get(\"label\", [\"\"])[0],\n        \"Strand\": feature.strand,\n        \"Start\": feature.location.start,\n        \"End\": feature.location.end, \n        \"Type\": feature.type\n    })\nprint(features)\nDataFrame(features)\n\n[{'Label': '', 'Strand': 1, 'Start': ExactPosition(0), 'End': ExactPosition(2686), 'Type': 'source'}, {'Label': 'pBR322ori-F', 'Strand': 1, 'Start': ExactPosition(117), 'End': ExactPosition(137), 'Type': 'primer_bind'}, {'Label': 'L4440', 'Strand': 1, 'Start': ExactPosition(370), 'End': ExactPosition(388), 'Type': 'primer_bind'}, {'Label': 'CAP binding site', 'Strand': 1, 'Start': ExactPosition(504), 'End': ExactPosition(526), 'Type': 'protein_bind'}, {'Label': 'lac promoter', 'Strand': 1, 'Start': ExactPosition(540), 'End': ExactPosition(571), 'Type': 'promoter'}, {'Label': 'lac operator', 'Strand': 1, 'Start': ExactPosition(578), 'End': ExactPosition(595), 'Type': 'protein_bind'}, {'Label': 'M13/pUC Reverse', 'Strand': 1, 'Start': ExactPosition(583), 'End': ExactPosition(606), 'Type': 'primer_bind'}, {'Label': 'M13 rev', 'Strand': 1, 'Start': ExactPosition(602), 'End': ExactPosition(619), 'Type': 'primer_bind'}, {'Label': 'M13 Reverse', 'Strand': 1, 'Start': ExactPosition(602), 'End': ExactPosition(619), 'Type': 'primer_bind'}, {'Label': 'lacZ-alpha', 'Strand': 1, 'Start': ExactPosition(614), 'End': ExactPosition(938), 'Type': 'CDS'}, {'Label': 'MCS', 'Strand': 1, 'Start': ExactPosition(631), 'End': ExactPosition(688), 'Type': 'misc_feature'}, {'Label': 'M13 Forward', 'Strand': -1, 'Start': ExactPosition(688), 'End': ExactPosition(706), 'Type': 'primer_bind'}, {'Label': 'M13 fwd', 'Strand': -1, 'Start': ExactPosition(688), 'End': ExactPosition(705), 'Type': 'primer_bind'}, {'Label': 'M13/pUC Forward', 'Strand': -1, 'Start': ExactPosition(697), 'End': ExactPosition(720), 'Type': 'primer_bind'}, {'Label': 'pRS-marker', 'Strand': -1, 'Start': ExactPosition(913), 'End': ExactPosition(933), 'Type': 'primer_bind'}, {'Label': \"pGEX 3'\", 'Strand': 1, 'Start': ExactPosition(1032), 'End': ExactPosition(1055), 'Type': 'primer_bind'}, {'Label': 'pBRforEco', 'Strand': -1, 'Start': ExactPosition(1092), 'End': ExactPosition(1111), 'Type': 'primer_bind'}, {'Label': 'AmpR promoter', 'Strand': 1, 'Start': ExactPosition(1178), 'End': ExactPosition(1283), 'Type': 'promoter'}, {'Label': 'AmpR', 'Strand': 1, 'Start': ExactPosition(1283), 'End': ExactPosition(2144), 'Type': 'CDS'}, {'Label': 'Amp-R', 'Strand': -1, 'Start': ExactPosition(1501), 'End': ExactPosition(1521), 'Type': 'primer_bind'}, {'Label': 'ori', 'Strand': 1, 'Start': ExactPosition(0), 'End': ExactPosition(2686), 'Type': 'rep_origin'}]\n\n\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/SeqFeature.py:1040: BiopythonParserWarning: Attempting to fix invalid location '2315..217' as it looks like incorrect origin wrapping. Please fix input file, this could have unintended behavior.\n  warnings.warn(\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/SeqFeature.py:230: BiopythonDeprecationWarning: Please use .location.strand rather than .strand\n  warnings.warn(\n\n\n\n\n\n\n\n\n\n\nLabel\nStrand\nStart\nEnd\nType\n\n\n\n\n0\n\n1\n0\n2686\nsource\n\n\n1\npBR322ori-F\n1\n117\n137\nprimer_bind\n\n\n2\nL4440\n1\n370\n388\nprimer_bind\n\n\n3\nCAP binding site\n1\n504\n526\nprotein_bind\n\n\n4\nlac promoter\n1\n540\n571\npromoter\n\n\n5\nlac operator\n1\n578\n595\nprotein_bind\n\n\n6\nM13/pUC Reverse\n1\n583\n606\nprimer_bind\n\n\n7\nM13 rev\n1\n602\n619\nprimer_bind\n\n\n8\nM13 Reverse\n1\n602\n619\nprimer_bind\n\n\n9\nlacZ-alpha\n1\n614\n938\nCDS\n\n\n10\nMCS\n1\n631\n688\nmisc_feature\n\n\n11\nM13 Forward\n-1\n688\n706\nprimer_bind\n\n\n12\nM13 fwd\n-1\n688\n705\nprimer_bind\n\n\n13\nM13/pUC Forward\n-1\n697\n720\nprimer_bind\n\n\n14\npRS-marker\n-1\n913\n933\nprimer_bind\n\n\n15\npGEX 3'\n1\n1032\n1055\nprimer_bind\n\n\n16\npBRforEco\n-1\n1092\n1111\nprimer_bind\n\n\n17\nAmpR promoter\n1\n1178\n1283\npromoter\n\n\n18\nAmpR\n1\n1283\n2144\nCDS\n\n\n19\nAmp-R\n-1\n1501\n1521\nprimer_bind\n\n\n20\nori\n1\n0\n2686\nrep_origin",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#primers",
    "href": "design.html#primers",
    "title": "2  Design",
    "section": "2.3 Primers",
    "text": "2.3 Primers\nprimers It is uniquely focused on DNA assembly flows like Gibson Assembly and Golden Gate cloning. You can design primers while adding sequence to the 5’ ends of primers.\n\nfrom primers import create, primers\nfrom pandas import DataFrame\nfrom random import sample, choices\n\nmyseq_list = choices([\"A\", \"T\", \"G\", \"C\"], k=100)\nmyseq = \"\".join(myseq_list)\nprint(myseq)\n\nfwd, rev = create(myseq, add_fwd = \"GGGG\", add_rev = \"TTTT\")\n# p1, p2 = primers(myseq, add_fwd = \"GGGG\", add_rev = \"TTTT\")\nprint(fwd)\nprint(rev)\n\n## display table form\nDataFrame(list(fwd.dict().values())[:-1], index = list(rev.dict().keys())[:-1])\n\n## default argument values \ncreate\n\nCGTGCCTCCATAAATAACTTGCAAGATTCTCACCATTCGAAGGTTCTCGACAAGGGGCGGGGGGTAAAAATAGCATTACTAGTTCGGATAAATCTGCCCT\nPrimer(seq='GGGGCGTGCCTCCATAAATAACTTG', len=25, tm=63.3, tm_total=70.6, gc=0.5, dg=0, fwd=True, off_target_count=0, scoring=Scoring(penalty=1.8, penalty_tm=1.3, penalty_tm_diff=0, penalty_gc=0.0, penalty_len=0.5, penalty_dg=0.0, penalty_off_target=0.0))\nPrimer(seq='TTTTAGGGCAGATTTATCCGAACTAGT', len=27, tm=63.4, tm_total=63.9, gc=0.4, dg=-0.37, fwd=False, off_target_count=0, scoring=Scoring(penalty=4.6, penalty_tm=1.4, penalty_tm_diff=0, penalty_gc=2.0, penalty_len=0.5, penalty_dg=0.7, penalty_off_target=0.0))\n\n\n&lt;function primers.primers.primers(seq: str, add_fwd: str = '', add_rev: str = '', add_fwd_len: Tuple[int, int] = (-1, -1), add_rev_len: Tuple[int, int] = (-1, -1), offtarget_check: str = '', optimal_tm: float = 62.0, optimal_gc: float = 0.5, optimal_len: int = 22, penalty_tm: float = 1.0, penalty_gc: float = 0.2, penalty_len: float = 0.5, penalty_tm_diff: float = 1.0, penalty_dg: float = 2.0, penalty_off_target: float = 20.0) -&gt; Tuple[primers.primers.Primer, primers.primers.Primer]&gt;\n\n\n\nDefault arguments and values\n\n&lt;function primers.primers.primers(seq: str, add_fwd: str = '', add_rev: str = '', add_fwd_len: Tuple[int, int] = (-1, -1), add_rev_len: Tuple[int, int] = (-1, -1), offtarget_check: str = '', optimal_tm: float = 62.0, optimal_gc: float = 0.5, optimal_len: int = 22, penalty_tm: float = 1.0, penalty_gc: float = 0.2, penalty_len: float = 0.5, penalty_tm_diff: float = 1.0, penalty_dg: float = 2.0, penalty_off_target: float = 20.0) -&gt; Tuple[primers.primers.Primer, primers.primers.Primer]&gt;\n\nofftarget\n\n\nfrom primers import create\nfrom random import choices\n\ndef print_primer_info(x):\n    from pandas import DataFrame\n    df = DataFrame(list(x.dict().values())[:-1], index = list(x.dict().keys())[:-1])\n    print(df)\n\nprimer_binding_seq = \"GTCATATGCATTCGATGCGTTAGG\"\nrnd_seq1 = \"\".join(choices([\"A\", \"T\", \"G\", \"C\"], k=100))\nrnd_seq2 = \"\".join(choices([\"A\", \"T\", \"G\", \"C\"], k=100))\n\nmyseq = primer_binding_seq+rnd_seq1\nprint(myseq)\nlen(myseq)\n\nfwd, rev = create(myseq)\nprint_primer_info(fwd)\n\n## primer considering offtargets\nmyseq2 = primer_binding_seq+rnd_seq1+primer_binding_seq+rnd_seq2\nfwd2, rev = create(myseq2)\nprint_primer_info(fwd2)\n\n## optimal_tm is ignored \nfwd2, rev = create(myseq2, optimal_tm = 62)\nprint_primer_info(fwd2)\n\nGTCATATGCATTCGATGCGTTAGGGACACCCATGGCAACATGTGGATATAACTCGGTGCTGAGGAAAACTTCATACGCTCTTGACGTTCTATGCATGAAGCCCTTTCAACGCACGCTTCATTCA\n                                     0\nseq               GTCATATGCATTCGATGCGT\nlen                                 20\ntm                                62.5\ntm_total                          62.5\ngc                                 0.5\ndg                               -0.56\nfwd                               True\noff_target_count                     0\n                                           0\nseq               GTCATATGCATTCGATGCGTTAGGGA\nlen                                       26\ntm                                      68.0\ntm_total                                68.0\ngc                                       0.5\ndg                                     -0.56\nfwd                                     True\noff_target_count                           0\n                                           0\nseq               GTCATATGCATTCGATGCGTTAGGGA\nlen                                       26\ntm                                      68.0\ntm_total                                68.0\ngc                                       0.5\ndg                                     -0.56\nfwd                                     True\noff_target_count                           0",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#pydna",
    "href": "design.html#pydna",
    "title": "2  Design",
    "section": "2.4 pydna",
    "text": "2.4 pydna\n\npyDNA The pydna python package provide a human-readable formal descriptions of 🧬 cloning and genetic assembly strategies in Python 🐍 which allow for simulation and verification.\n\n\nfrom pydna.dseqrecord import Dseqrecord\n\ndsr = Dseqrecord(\"ATGCGTTGC\")\ndsr.figure()\n\n\nDseqrecord(-9)\nATGCGTTGC\nTACGCAACG\n\n\n\n\nfrom pydna.readers import read\n\np = read(\"data/parts/addgene-plasmid-50005-sequence-222046.gbk\")\np.list_features()\n\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/SeqFeature.py:1040: BiopythonParserWarning: Attempting to fix invalid location '2315..217' as it looks like incorrect origin wrapping. Please fix input file, this could have unintended behavior.\n  warnings.warn(\n\n\n\n\n\n\nFt#\nLabel or Note\nDir\nSta\nEnd\nLen\ntype\norf?\n\n\n\n\n0\nnd\n--&gt;\n0\n2686\n2686\nsource\nno\n\n\n1\nL:pBR322ori-F\n--&gt;\n117\n137\n20\nprimer_bind\nno\n\n\n2\nL:L4440\n--&gt;\n370\n388\n18\nprimer_bind\nno\n\n\n3\nL:CAP binding si\n--&gt;\n504\n526\n22\nprotein_bind\nno\n\n\n4\nL:lac promoter\n--&gt;\n540\n571\n31\npromoter\nno\n\n\n5\nL:lac operator\n--&gt;\n578\n595\n17\nprotein_bind\nno\n\n\n6\nL:M13/pUC Revers\n--&gt;\n583\n606\n23\nprimer_bind\nno\n\n\n7\nL:M13 rev\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n8\nL:M13 Reverse\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n9\nL:lacZ-alpha\n--&gt;\n614\n938\n324\nCDS\nyes\n\n\n10\nL:MCS\n--&gt;\n631\n688\n57\nmisc_feature\nno\n\n\n11\nL:M13 Forward\n&lt;--\n688\n706\n18\nprimer_bind\nno\n\n\n12\nL:M13 fwd\n&lt;--\n688\n705\n17\nprimer_bind\nno\n\n\n13\nL:M13/pUC Forwar\n&lt;--\n697\n720\n23\nprimer_bind\nno\n\n\n14\nL:pRS-marker\n&lt;--\n913\n933\n20\nprimer_bind\nno\n\n\n15\nL:pGEX 3'\n--&gt;\n1032\n1055\n23\nprimer_bind\nno\n\n\n16\nL:pBRforEco\n&lt;--\n1092\n1111\n19\nprimer_bind\nno\n\n\n17\nL:AmpR promoter\n--&gt;\n1178\n1283\n105\npromoter\nno\n\n\n18\nL:AmpR\n--&gt;\n1283\n2144\n861\nCDS\nyes\n\n\n19\nL:Amp-R\n&lt;--\n1501\n1521\n20\nprimer_bind\nno\n\n\n20\nL:ori\n--&gt;\n0\n2686\n589\nrep_origin\nno\n\n\n\n\n\n\n\nextracted_site = p.extract_feature(10)\nextracted_site.seq\n\nDseq(-57)\nAAGC..ATTC\nTTCG..TAAG",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#parts",
    "href": "design.html#parts",
    "title": "2  Design",
    "section": "2.5 Parts",
    "text": "2.5 Parts\n\npUC19 from Addgene\nRemove BsaI site\nInsert a part into MCS\nHinz, Aaron J., Benjamin Stenzler, and Alexandre J. Poulain. “Golden gate assembly of aerobic and anaerobic microbial bioreporters.” Applied and environmental microbiology 88.1 (2022): e01485-21.\n\n\n\n\nplasmid pUC19\n\n\n \n\n2.5.0.1 List of parts\n\npUC19-J23100.gb\npUC19-RB0030.gb\npUC19-L2U3H03.gb\npUC19-egfp.gb",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#feature-amplification",
    "href": "design.html#feature-amplification",
    "title": "2  Design",
    "section": "2.6 Feature amplification",
    "text": "2.6 Feature amplification\n\n2.6.1 primer design\n\nfrom pydna.readers import read\nfrom primers import create\n\negfp = read(\"data/parts/pUC19-egfp.gb\")\n\negfp_feature_list = egfp.list_features()\ndisplay(egfp_feature_list)\n\nmyseq = egfp.extract_feature(13)\nstr(myseq.seq)\n\nfwd, rev = create(str(myseq.seq), add_fwd = \"GGGG\", add_rev = \"TTTT\")\nprint(fwd)\n\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/GenBank/Scanner.py:1528: BiopythonParserWarning: Attempting to parse malformed locus line:\n'LOCUS       pUC19-egfp        3371 bp DNA     circular SYN 18-MAY-2024\\n'\nFound locus 'pUC19-egfp' size '3371' residue_type 'DNA'\nSome fields may be wrong.\n  warnings.warn(\n\n\n\n\n\n\nFt#\nLabel or Note\nDir\nSta\nEnd\nLen\ntype\norf?\n\n\n\n\n0\nnd\n--&gt;\n0\n3371\n3371\nsource\nno\n\n\n1\nL:pBR322ori-F\n--&gt;\n117\n137\n20\nprimer_bind\nno\n\n\n2\nL:L4440\n--&gt;\n370\n388\n18\nprimer_bind\nno\n\n\n3\nL:CAP binding si\n--&gt;\n504\n526\n22\nprotein_bind\nno\n\n\n4\nL:lac promoter\n--&gt;\n540\n571\n31\npromoter\nno\n\n\n5\nL:lac operator\n--&gt;\n578\n595\n17\nprotein_bind\nno\n\n\n6\nL:M13/pUC Revers\n--&gt;\n583\n606\n23\nprimer_bind\nno\n\n\n7\nL:M13 rev\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n8\nL:M13 Reverse\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n9\nL:lacZ-alpha\n--&gt;\n614\n1623\n1009\nCDS\nno\n\n\n10\nL:BsaI-F\n--&gt;\n631\n638\n7\nmisc_feature\nno\n\n\n11\nL:lacZ-alpha\n--&gt;\n638\n642\n4\nCDS\nno\n\n\n12\nL:oh-f2-f3-F\n--&gt;\n638\n642\n4\nmisc_feature\nno\n\n\n13\nL:EGFP\n--&gt;\n642\n1362\n720\nCDS\nyes\n\n\n14\nL:EGFP\n--&gt;\n642\n1359\n717\nCDS\nno\n\n\n15\nL:EGFP-N\n&lt;--\n687\n709\n22\nprimer_bind\nno\n\n\n16\nL:EXFP-R\n&lt;--\n948\n968\n20\nprimer_bind\nno\n\n\n17\nL:EGFP-C\n--&gt;\n1295\n1317\n22\nprimer_bind\nno\n\n\n18\nL:oh-f3-f4-F\n--&gt;\n1362\n1366\n4\nmisc_feature\nno\n\n\n19\nL:BasI-R\n--&gt;\n1366\n1373\n7\nmisc_feature\nno\n\n\n20\nL:M13 Forward\n&lt;--\n1373\n1391\n18\nprimer_bind\nno\n\n\n21\nL:M13 fwd\n&lt;--\n1373\n1390\n17\nprimer_bind\nno\n\n\n22\nL:M13/pUC Forwar\n&lt;--\n1382\n1405\n23\nprimer_bind\nno\n\n\n23\nL:pRS-marker\n&lt;--\n1598\n1618\n20\nprimer_bind\nno\n\n\n24\nL:pGEX 3'\n--&gt;\n1717\n1740\n23\nprimer_bind\nno\n\n\n25\nL:pBRforEco\n&lt;--\n1777\n1796\n19\nprimer_bind\nno\n\n\n26\nL:AmpR promoter\n--&gt;\n1863\n1968\n105\npromoter\nno\n\n\n27\nL:AmpR\n--&gt;\n1968\n2829\n861\nCDS\nyes\n\n\n28\nL:Amp-R\n&lt;--\n2186\n2206\n20\nprimer_bind\nno\n\n\n29\nL:ori\n--&gt;\n0\n3371\n589\nrep_origin\nno\n\n\n\n\n\n\nPrimer(seq='GGGGATGGTGAGCAAGGGCG', len=20, tm=65.1, tm_total=72.1, gc=0.7, dg=0, fwd=True, off_target_count=0, scoring=Scoring(penalty=10.1, penalty_tm=3.1, penalty_tm_diff=0, penalty_gc=4.0, penalty_len=3.0, penalty_dg=0.0, penalty_off_target=0.0))\n\n\n\n\n2.6.2 PCR\n\nfrom pydna.all import pcr\n\npcr_product = pcr(fwd.seq, rev.seq, egfp.extract_feature(13))\npcr_product.figure()\n\n    5ATGGTGAGCAAGGGCG...CATGGACGAGCTGTACAAGTAA3\n                        ||||||||||||||||||||||\n                       3GTACCTGCTCGACATGTTCATTTTTT5\n5GGGGATGGTGAGCAAGGGCG3\n     ||||||||||||||||\n    3TACCACTCGTTCCCGC...GTACCTGCTCGACATGTTCATT5",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#golden-gate-assembly-i",
    "href": "design.html#golden-gate-assembly-i",
    "title": "2  Design",
    "section": "2.7 Golden Gate Assembly I",
    "text": "2.7 Golden Gate Assembly I\n\nTarget sequence including overhang and BsaI site\nGenerate primers\nPCR the target sequence\n\n\nfrom primers import create\nfrom pydna.all import pcr\n\nfrag1 = egfp.extract_feature(10)\nfrag2 = egfp.extract_feature(12)\nfrag3 = egfp.extract_feature(13)\nfrag4 = egfp.extract_feature(18)\nfrag5 = egfp.extract_feature(19)\n\ntargetseq = frag1+frag2+frag3+frag4+frag5\nfwd, rev = create(str(targetseq.seq))\n\npcr_product = pcr(fwd.seq, rev.seq, targetseq)\npcr_product.figure()\n\n5GGTCTCAGTCAATGGTGA...TACAAGTAAGGGATGAGACC3\n                      ||||||||||||||||||||\n                     3ATGTTCATTCCCTACTCTGG5\n5GGTCTCAGTCAATGGTGA3\n ||||||||||||||||||\n3CCAGAGTCAGTTACCACT...ATGTTCATTCCCTACTCTGG5\n\n\n\n2.7.1 Enzyme cutting\n\nfrom Bio.Restriction import BsaI\n\ncut_product = pcr_product.cut(BsaI)\nprint(len(cut_product))\ndisplay(cut_product[0].figure())\nprint()\ndisplay(cut_product[1].figure())\nprint()\ndisplay(cut_product[2].figure())\n\n3\n\n\n\n\n\nDseqrecord(-11)\nGGTCTCA    \nCCAGAGTCAGT\n\n\n\n\nDseqrecord(-728)\nGTCAATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATCTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAA    \n    TACCACTCGTTCCCGCTCCTCGACAAGTGGCCCCACCACGGGTAGGACCAGCTCGACCTGCCGCTGCATTTGCCGGTGTTCAAGTCGCACAGGCCGCTCCCGCTCCCGCTACGGTGGATGCCGTTCGACTGGGACTTCAAGTAGACGTGGTGGCCGTTCGACGGGCACGGGACCGGGTGGGAGCACTGGTGGGACTGGATGCCGCACGTCACGAAGTCGGCGATGGGGCTGGTGTACTTCGTCGTGCTGAAGAAGTTCAGGCGGTACGGGCTTCCGATGCAGGTCCTCGCGTGGTAGAAGAAGTTCCTGCTGCCGTTGATGTTCTGGGCGCGGCTCCACTTCAAGCTCCCGCTGTGGGACCACTTGGCGTAGCTCGACTTCCCGTAGCTGAAGTTCCTCCTGCCGTTGTAGGACCCCGTGTTCGACCTCATGTTGATGTTGTCGGTGTTGCAGATATAGTACCGGCTGTTCGTCTTCTTGCCGTAGTTCCACTTGAAGTTCTAGGCGGTGTTGTAGCTCCTGCCGTCGCACGTCGAGCGGCTGGTGATGGTCGTCTTGTGGGGGTAGCCGCTGCCGGGGCACGACGACGGGCTGTTGGTGATGGACTCGTGGGTCAGGCGGGACTCGTTTCTGGGGTTGCTCTTCGCGCTAGTGTACCAGGACGACCTCAAGCACTGGCGGCGGCCCTAGTGAGAGCCGTACCTGCTCGACATGTTCATTCCCT\n\n\n\n\nDseqrecord(-11)\nGGGATGAGACC\n    ACTCTGG\n\n\n\n\n\n2.7.2 Assembly the fragments back\n\nfrom pydna.assembly import Assembly\nfrom pydna.common_sub_strings import terminal_overlap\n\nasm = Assembly((cut_product[0], cut_product[1], cut_product[2]), algorithm = terminal_overlap, limit = 4)\n\ncandidate = asm.assemble_linear()\n\nprint(candidate[0])\n\ncandidate[0].figure()   \n\nDseqrecord\ncircular: False\nsize: 742\nID: id\nName: name\nDescription: description\nNumber of features: 13\n/molecule_type=DNA\nDseq(-742)\nGGTC..GACC\nCCAG..CTGG\n\n\nname| 4\n     \\/\n     /\\\n      4|name| 4\n             \\/\n             /\\\n              4|name",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#golden-gate-assembly-ii",
    "href": "design.html#golden-gate-assembly-ii",
    "title": "2  Design",
    "section": "2.8 Golden Gate Assembly II",
    "text": "2.8 Golden Gate Assembly II\n\n2.8.1 Find positions of a specific feature label\n\nfrom pydna.readers import read\n\n## read the parts\negfp = read(\"data/parts/pUC19-egfp.gb\")\npromoter = read(\"data/parts/pUC19-J23100.gb\")\nterminator = read(\"data/parts/pUC19-L2U3H03.gb\")\nrbs = read(\"data/parts/pUC19-RB0030.gb\")\n\ndisplay(promoter.list_features())\ndisplay(rbs.list_features())\ndisplay(egfp.list_features())\ndisplay(terminator.list_features())\n\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/GenBank/Scanner.py:1528: BiopythonParserWarning: Attempting to parse malformed locus line:\n'LOCUS       pUC19-egfp        3371 bp DNA     circular SYN 18-MAY-2024\\n'\nFound locus 'pUC19-egfp' size '3371' residue_type 'DNA'\nSome fields may be wrong.\n  warnings.warn(\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/GenBank/Scanner.py:1528: BiopythonParserWarning: Attempting to parse malformed locus line:\n'LOCUS       pUC19-J23100        2686 bp DNA     circular SYN 01-JUN-2024\\n'\nFound locus 'pUC19-J23100' size '2686' residue_type 'DNA'\nSome fields may be wrong.\n  warnings.warn(\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/GenBank/Scanner.py:1528: BiopythonParserWarning: Attempting to parse malformed locus line:\n'LOCUS       pUC19-L2U3H03        2688 bp DNA     circular SYN 01-JUN-2024\\n'\nFound locus 'pUC19-L2U3H03' size '2688' residue_type 'DNA'\nSome fields may be wrong.\n  warnings.warn(\n/home/haseong/anaconda3/envs/biopy/lib/python3.11/site-packages/Bio/GenBank/Scanner.py:1528: BiopythonParserWarning: Attempting to parse malformed locus line:\n'LOCUS       pUC19-RB0030        2750 bp DNA     circular SYN 01-JUN-2024\\n'\nFound locus 'pUC19-RB0030' size '2750' residue_type 'DNA'\nSome fields may be wrong.\n  warnings.warn(\n\n\n\n\n\n\nFt#\nLabel or Note\nDir\nSta\nEnd\nLen\ntype\norf?\n\n\n\n\n0\nnd\n--&gt;\n0\n2686\n2686\nsource\nno\n\n\n1\nL:pBR322ori-F\n--&gt;\n117\n137\n20\nprimer_bind\nno\n\n\n2\nL:L4440\n--&gt;\n370\n388\n18\nprimer_bind\nno\n\n\n3\nL:CAP binding si\n--&gt;\n504\n526\n22\nprotein_bind\nno\n\n\n4\nL:lac promoter\n--&gt;\n540\n571\n31\npromoter\nno\n\n\n5\nL:lac operator\n--&gt;\n578\n595\n17\nprotein_bind\nno\n\n\n6\nL:M13/pUC Revers\n--&gt;\n583\n606\n23\nprimer_bind\nno\n\n\n7\nL:M13 rev\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n8\nL:M13 Reverse\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n9\nL:lacZ-alpha\n--&gt;\n614\n938\n324\nCDS\nno\n\n\n10\nL:BsaI-F\n--&gt;\n631\n638\n7\nmisc_feature\nno\n\n\n11\nL:oh-v-f1-F\n--&gt;\n638\n642\n4\nmisc_feature\nno\n\n\n12\nL:﻿BBa_J23100\n--&gt;\n642\n677\n35\npromoter\nno\n\n\n13\nL:oh-f1-f2-F\n--&gt;\n677\n681\n4\nmisc_feature\nno\n\n\n14\nL:BsaI-R\n--&gt;\n681\n688\n7\nmisc_feature\nno\n\n\n15\nL:M13 Forward\n&lt;--\n688\n706\n18\nprimer_bind\nno\n\n\n16\nL:M13 fwd\n&lt;--\n688\n705\n17\nprimer_bind\nno\n\n\n17\nL:M13/pUC Forwar\n&lt;--\n697\n720\n23\nprimer_bind\nno\n\n\n18\nL:pRS-marker\n&lt;--\n913\n933\n20\nprimer_bind\nno\n\n\n19\nL:pGEX 3'\n--&gt;\n1032\n1055\n23\nprimer_bind\nno\n\n\n20\nL:pBRforEco\n&lt;--\n1092\n1111\n19\nprimer_bind\nno\n\n\n21\nL:AmpR promoter\n--&gt;\n1178\n1283\n105\npromoter\nno\n\n\n22\nL:AmpR\n--&gt;\n1283\n2144\n861\nCDS\nyes\n\n\n23\nL:Amp-R\n&lt;--\n1501\n1521\n20\nprimer_bind\nno\n\n\n24\nL:ori\n--&gt;\n0\n2686\n589\nrep_origin\nno\n\n\n\n\n\n\n\n\n\n\nFt#\nLabel or Note\nDir\nSta\nEnd\nLen\ntype\norf?\n\n\n\n\n0\nnd\n--&gt;\n0\n2750\n2750\nsource\nno\n\n\n1\nL:pBR322ori-F\n--&gt;\n117\n137\n20\nprimer_bind\nno\n\n\n2\nL:L4440\n--&gt;\n370\n388\n18\nprimer_bind\nno\n\n\n3\nL:CAP binding si\n--&gt;\n504\n526\n22\nprotein_bind\nno\n\n\n4\nL:lac promoter\n--&gt;\n540\n571\n31\npromoter\nno\n\n\n5\nL:lac operator\n--&gt;\n578\n595\n17\nprotein_bind\nno\n\n\n6\nL:M13/pUC Revers\n--&gt;\n583\n606\n23\nprimer_bind\nno\n\n\n7\nL:M13 rev\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n8\nL:M13 Reverse\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n9\nL:BsaI-F\n--&gt;\n631\n638\n7\nmisc_feature\nno\n\n\n10\nL:oh-f1-f2-F\n--&gt;\n638\n642\n4\nmisc_feature\nno\n\n\n11\nL:R_BBa_B0030\n--&gt;\n642\n741\n99\nmisc_feature\nno\n\n\n12\nL:sTRSV HHRz\n--&gt;\n644\n694\n50\nmisc_RNA\nno\n\n\n13\nN:strong bacteri\n--&gt;\n727\n739\n12\nRBS\nno\n\n\n14\nL:oh-f2-f3-F\n--&gt;\n741\n745\n4\nmisc_feature\nno\n\n\n15\nL:BsaI-R\n--&gt;\n745\n752\n7\nmisc_feature\nno\n\n\n16\nL:M13 Forward\n&lt;--\n752\n770\n18\nprimer_bind\nno\n\n\n17\nL:M13 fwd\n&lt;--\n752\n769\n17\nprimer_bind\nno\n\n\n18\nL:M13/pUC Forwar\n&lt;--\n761\n784\n23\nprimer_bind\nno\n\n\n19\nL:pRS-marker\n&lt;--\n977\n997\n20\nprimer_bind\nno\n\n\n20\nL:pGEX 3'\n--&gt;\n1096\n1119\n23\nprimer_bind\nno\n\n\n21\nL:pBRforEco\n&lt;--\n1156\n1175\n19\nprimer_bind\nno\n\n\n22\nL:AmpR promoter\n--&gt;\n1242\n1347\n105\npromoter\nno\n\n\n23\nL:AmpR\n--&gt;\n1347\n2208\n861\nCDS\nyes\n\n\n24\nL:Amp-R\n&lt;--\n1565\n1585\n20\nprimer_bind\nno\n\n\n25\nL:ori\n--&gt;\n0\n2750\n589\nrep_origin\nno\n\n\n\n\n\n\n\n\n\n\nFt#\nLabel or Note\nDir\nSta\nEnd\nLen\ntype\norf?\n\n\n\n\n0\nnd\n--&gt;\n0\n3371\n3371\nsource\nno\n\n\n1\nL:pBR322ori-F\n--&gt;\n117\n137\n20\nprimer_bind\nno\n\n\n2\nL:L4440\n--&gt;\n370\n388\n18\nprimer_bind\nno\n\n\n3\nL:CAP binding si\n--&gt;\n504\n526\n22\nprotein_bind\nno\n\n\n4\nL:lac promoter\n--&gt;\n540\n571\n31\npromoter\nno\n\n\n5\nL:lac operator\n--&gt;\n578\n595\n17\nprotein_bind\nno\n\n\n6\nL:M13/pUC Revers\n--&gt;\n583\n606\n23\nprimer_bind\nno\n\n\n7\nL:M13 rev\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n8\nL:M13 Reverse\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n9\nL:lacZ-alpha\n--&gt;\n614\n1623\n1009\nCDS\nno\n\n\n10\nL:BsaI-F\n--&gt;\n631\n638\n7\nmisc_feature\nno\n\n\n11\nL:lacZ-alpha\n--&gt;\n638\n642\n4\nCDS\nno\n\n\n12\nL:oh-f2-f3-F\n--&gt;\n638\n642\n4\nmisc_feature\nno\n\n\n13\nL:EGFP\n--&gt;\n642\n1362\n720\nCDS\nyes\n\n\n14\nL:EGFP\n--&gt;\n642\n1359\n717\nCDS\nno\n\n\n15\nL:EGFP-N\n&lt;--\n687\n709\n22\nprimer_bind\nno\n\n\n16\nL:EXFP-R\n&lt;--\n948\n968\n20\nprimer_bind\nno\n\n\n17\nL:EGFP-C\n--&gt;\n1295\n1317\n22\nprimer_bind\nno\n\n\n18\nL:oh-f3-f4-F\n--&gt;\n1362\n1366\n4\nmisc_feature\nno\n\n\n19\nL:BsaI-R\n--&gt;\n1366\n1373\n7\nmisc_feature\nno\n\n\n20\nL:M13 Forward\n&lt;--\n1373\n1391\n18\nprimer_bind\nno\n\n\n21\nL:M13 fwd\n&lt;--\n1373\n1390\n17\nprimer_bind\nno\n\n\n22\nL:M13/pUC Forwar\n&lt;--\n1382\n1405\n23\nprimer_bind\nno\n\n\n23\nL:pRS-marker\n&lt;--\n1598\n1618\n20\nprimer_bind\nno\n\n\n24\nL:pGEX 3'\n--&gt;\n1717\n1740\n23\nprimer_bind\nno\n\n\n25\nL:pBRforEco\n&lt;--\n1777\n1796\n19\nprimer_bind\nno\n\n\n26\nL:AmpR promoter\n--&gt;\n1863\n1968\n105\npromoter\nno\n\n\n27\nL:AmpR\n--&gt;\n1968\n2829\n861\nCDS\nyes\n\n\n28\nL:Amp-R\n&lt;--\n2186\n2206\n20\nprimer_bind\nno\n\n\n29\nL:ori\n--&gt;\n0\n3371\n589\nrep_origin\nno\n\n\n\n\n\n\n\n\n\n\nFt#\nLabel or Note\nDir\nSta\nEnd\nLen\ntype\norf?\n\n\n\n\n0\nnd\n--&gt;\n0\n2688\n2688\nsource\nno\n\n\n1\nL:pBR322ori-F\n--&gt;\n117\n137\n20\nprimer_bind\nno\n\n\n2\nL:L4440\n--&gt;\n370\n388\n18\nprimer_bind\nno\n\n\n3\nL:CAP binding si\n--&gt;\n504\n526\n22\nprotein_bind\nno\n\n\n4\nL:lac promoter\n--&gt;\n540\n571\n31\npromoter\nno\n\n\n5\nL:lac operator\n--&gt;\n578\n595\n17\nprotein_bind\nno\n\n\n6\nL:M13/pUC Revers\n--&gt;\n583\n606\n23\nprimer_bind\nno\n\n\n7\nL:M13 rev\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n8\nL:M13 Reverse\n--&gt;\n602\n619\n17\nprimer_bind\nno\n\n\n9\nL:BsaI-F\n--&gt;\n631\n638\n7\nmisc_feature\nno\n\n\n10\nL:oh-f3-f4-F\n--&gt;\n638\n642\n4\nmisc_feature\nno\n\n\n11\nL:L2U3H03\n--&gt;\n642\n679\n37\nmisc_feature\nno\n\n\n12\nL:oh-f7-v-F\n--&gt;\n679\n683\n4\nmisc_feature\nno\n\n\n13\nL:BsaI-R\n--&gt;\n683\n690\n7\nmisc_feature\nno\n\n\n14\nL:M13 Forward\n&lt;--\n690\n708\n18\nprimer_bind\nno\n\n\n15\nL:M13 fwd\n&lt;--\n690\n707\n17\nprimer_bind\nno\n\n\n16\nL:M13/pUC Forwar\n&lt;--\n699\n722\n23\nprimer_bind\nno\n\n\n17\nL:pRS-marker\n&lt;--\n915\n935\n20\nprimer_bind\nno\n\n\n18\nL:pGEX 3'\n--&gt;\n1034\n1057\n23\nprimer_bind\nno\n\n\n19\nL:pBRforEco\n&lt;--\n1094\n1113\n19\nprimer_bind\nno\n\n\n20\nL:AmpR promoter\n--&gt;\n1180\n1285\n105\npromoter\nno\n\n\n21\nL:AmpR\n--&gt;\n1285\n2146\n861\nCDS\nyes\n\n\n22\nL:Amp-R\n&lt;--\n1503\n1523\n20\nprimer_bind\nno\n\n\n23\nL:ori\n--&gt;\n0\n2688\n589\nrep_origin\nno\n\n\n\n\n\n\n\nMake a function for searching by label and returning positions\n\n\n## search by label and return the location\ndef get_positions_by_label(record, label) :\n    feature_list = record.features\n    pos = {'start': None, 'end': None}\n    for feature in feature_list:\n        if \"label\" in feature.qualifiers:\n            if feature.qualifiers['label'] == [label]:\n                pos['start'] = int(feature.location.start)\n                pos['end'] = int(feature.location.end)\n    return pos\n\ndef get_record_between_labels(record, label1, label2) :\n    pos = {'start': get_positions_by_label(record, label1)['start'], 'end': get_positions_by_label(record, label2)['end']}\n    if pos['start'] == None or pos['end'] == None:\n        print(\"label not found\")\n        return None\n    else:\n        return record[pos['start']:pos['end']]\n    \ntarget_record = get_record_between_labels(egfp, \"BsaI-F\", \"BsaI-R\")\n# print(\"pos:\", target_record)\ndisplay(target_record.figure())\ntarget_record.seq\n\n\nDseqrecord(-742)\nGGTCTCAGTCAATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATCTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAAGGGATGAGACC\nCCAGAGTCAGTTACCACTCGTTCCCGCTCCTCGACAAGTGGCCCCACCACGGGTAGGACCAGCTCGACCTGCCGCTGCATTTGCCGGTGTTCAAGTCGCACAGGCCGCTCCCGCTCCCGCTACGGTGGATGCCGTTCGACTGGGACTTCAAGTAGACGTGGTGGCCGTTCGACGGGCACGGGACCGGGTGGGAGCACTGGTGGGACTGGATGCCGCACGTCACGAAGTCGGCGATGGGGCTGGTGTACTTCGTCGTGCTGAAGAAGTTCAGGCGGTACGGGCTTCCGATGCAGGTCCTCGCGTGGTAGAAGAAGTTCCTGCTGCCGTTGATGTTCTGGGCGCGGCTCCACTTCAAGCTCCCGCTGTGGGACCACTTGGCGTAGCTCGACTTCCCGTAGCTGAAGTTCCTCCTGCCGTTGTAGGACCCCGTGTTCGACCTCATGTTGATGTTGTCGGTGTTGCAGATATAGTACCGGCTGTTCGTCTTCTTGCCGTAGTTCCACTTGAAGTTCTAGGCGGTGTTGTAGCTCCTGCCGTCGCACGTCGAGCGGCTGGTGATGGTCGTCTTGTGGGGGTAGCCGCTGCCGGGGCACGACGACGGGCTGTTGGTGATGGACTCGTGGGTCAGGCGGGACTCGTTTCTGGGGTTGCTCTTCGCGCTAGTGTACCAGGACGACCTCAAGCACTGGCGGCGGCCCTAGTGAGAGCCGTACCTGCTCGACATGTTCATTCCCTACTCTGG\n\n\n\nDseq(-742)\nGGTC..GACC\nCCAG..CTGG\n\n\n\n\n2.8.2 Part preparation by PCR\n\nfrom “BsaI-F” to “BsaI-R”\n\n\nfrom pydna.readers import read\nfrom primers import create, primers\nfrom pydna.all import pcr\n\nlabel1 = \"BsaI-F\"\nlabel2 = \"BsaI-R\"\n\npromoter_target = get_record_between_labels(promoter, label1, label2)\nrbs_target = get_record_between_labels(rbs, label1, label2)\negfp_target = get_record_between_labels(egfp, label1, label2)\nterminator_target = get_record_between_labels(terminator, label1, label2)\n\nfwd, rev = create(str(promoter_target.seq))\npromoter_pcr_product = pcr(fwd.seq, rev.seq, promoter)\ndisplay(promoter_pcr_product.figure())\n\nfwd, rev = create(str(rbs_target.seq))\nrbs_pcr_product = pcr(fwd.seq, rev.seq, rbs)\ndisplay(rbs_pcr_product.figure())\n\nfwd, rev = create(str(egfp_target.seq))\negfp_pcr_product = pcr(fwd.seq, rev.seq, egfp)\ndisplay(egfp_pcr_product.figure())\n\nfwd, rev = create(str(terminator_target.seq))\nterminator_pcr_product = pcr(fwd.seq, rev.seq, terminator)\ndisplay(terminator_pcr_product.figure())\n\n5GGTCTCAGTCAATGGTGA...TACAAGTAAGGGATGAGACC3\n                      ||||||||||||||||||||\n                     3ATGTTCATTCCCTACTCTGG5\n5GGTCTCAGTCAATGGTGA3\n ||||||||||||||||||\n3CCAGAGTCAGTTACCACT...ATGTTCATTCCCTACTCTGG5\n\n\n5GGTCTCAAAGCTTGACG...CTAGCCTCCAGAGACC3\n                     ||||||||||||||||\n                    3GATCGGAGGTCTCTGG5\n5GGTCTCAAAGCTTGACG3\n |||||||||||||||||\n3CCAGAGTTTCGAACTGC...GATCGGAGGTCTCTGG5\n\n\n5GGTCTCACTCCAGCTG...GAGGAGAAATAGTCATGAGACC3\n                    ||||||||||||||||||||||\n                   3CTCCTCTTTATCAGTACTCTGG5\n5GGTCTCACTCCAGCTG3\n ||||||||||||||||\n3CCAGAGTGAGGTCGAC...CTCCTCTTTATCAGTACTCTGG5\n\n\n5GGTCTCAGGGATAGCG...TTGTTGAGCGAATGAGACC3\n                    |||||||||||||||||||\n                   3AACAACTCGCTTACTCTGG5\n5GGTCTCAGGGATAGCG3\n ||||||||||||||||\n3CCAGAGTCCCTATCGC...AACAACTCGCTTACTCTGG5\n\n\n\n\n2.8.3 Enzyme cut and assembly\n\nfrom Bio.Restriction import BsaI\nfrom pydna.assembly import Assembly\nfrom pydna.common_sub_strings import terminal_overlap\n\npromoter_cut_product = rbs_pcr_product.cut(BsaI)\nprint(len(promoter_cut_product))\ndisplay(promoter_cut_product[1].figure())\n\nrbs_cut_product = rbs_pcr_product.cut(BsaI)\nprint(len(rbs_cut_product))\ndisplay(rbs_cut_product[1].figure())\n\negfp_cut_product = egfp_pcr_product.cut(BsaI)\nprint(len(egfp_cut_product))\ndisplay(egfp_cut_product[1].figure())\n\nterminator_cut_product = terminator_pcr_product.cut(BsaI)\nprint(len(terminator_cut_product))\ndisplay(terminator_cut_product[1].figure())\n\n\nasm = Assembly((promoter_cut_product[1], rbs_cut_product[1], egfp_cut_product[1], terminator_cut_product[1]), algorithm = terminal_overlap, limit = 4)\n\ncandidate = asm.assemble_linear()\nprint(len(candidate))\n\ncandidate[0].figure()   \n\n\n3\n3\n3\n3\n1\n\n\n\nDseqrecord(-107)\nCTCCAGCTGTCACCGGATGTGCTTTCCGGTCTGATGAGTCCGTGAGGACGAAACAGCCTCTACAAATAATTTTGTTTAATCTAGAGATTAAAGAGGAGAAATA    \n    TCGACAGTGGCCTACACGAAAGGCCAGACTACTCAGGCACTCCTGCTTTGTCGGAGATGTTTATTAAAACAAATTAGATCTCTAATTTCTCCTCTTTATCAGT\n\n\n\n\nDseqrecord(-107)\nCTCCAGCTGTCACCGGATGTGCTTTCCGGTCTGATGAGTCCGTGAGGACGAAACAGCCTCTACAAATAATTTTGTTTAATCTAGAGATTAAAGAGGAGAAATA    \n    TCGACAGTGGCCTACACGAAAGGCCAGACTACTCAGGCACTCCTGCTTTGTCGGAGATGTTTATTAAAACAAATTAGATCTCTAATTTCTCCTCTTTATCAGT\n\n\n\n\nDseqrecord(-728)\nGTCAATGGTGAGCAAGGGCGAGGAGCTGTTCACCGGGGTGGTGCCCATCCTGGTCGAGCTGGACGGCGACGTAAACGGCCACAAGTTCAGCGTGTCCGGCGAGGGCGAGGGCGATGCCACCTACGGCAAGCTGACCCTGAAGTTCATCTGCACCACCGGCAAGCTGCCCGTGCCCTGGCCCACCCTCGTGACCACCCTGACCTACGGCGTGCAGTGCTTCAGCCGCTACCCCGACCACATGAAGCAGCACGACTTCTTCAAGTCCGCCATGCCCGAAGGCTACGTCCAGGAGCGCACCATCTTCTTCAAGGACGACGGCAACTACAAGACCCGCGCCGAGGTGAAGTTCGAGGGCGACACCCTGGTGAACCGCATCGAGCTGAAGGGCATCGACTTCAAGGAGGACGGCAACATCCTGGGGCACAAGCTGGAGTACAACTACAACAGCCACAACGTCTATATCATGGCCGACAAGCAGAAGAACGGCATCAAGGTGAACTTCAAGATCCGCCACAACATCGAGGACGGCAGCGTGCAGCTCGCCGACCACTACCAGCAGAACACCCCCATCGGCGACGGCCCCGTGCTGCTGCCCGACAACCACTACCTGAGCACCCAGTCCGCCCTGAGCAAAGACCCCAACGAGAAGCGCGATCACATGGTCCTGCTGGAGTTCGTGACCGCCGCCGGGATCACTCTCGGCATGGACGAGCTGTACAAGTAA    \n    TACCACTCGTTCCCGCTCCTCGACAAGTGGCCCCACCACGGGTAGGACCAGCTCGACCTGCCGCTGCATTTGCCGGTGTTCAAGTCGCACAGGCCGCTCCCGCTCCCGCTACGGTGGATGCCGTTCGACTGGGACTTCAAGTAGACGTGGTGGCCGTTCGACGGGCACGGGACCGGGTGGGAGCACTGGTGGGACTGGATGCCGCACGTCACGAAGTCGGCGATGGGGCTGGTGTACTTCGTCGTGCTGAAGAAGTTCAGGCGGTACGGGCTTCCGATGCAGGTCCTCGCGTGGTAGAAGAAGTTCCTGCTGCCGTTGATGTTCTGGGCGCGGCTCCACTTCAAGCTCCCGCTGTGGGACCACTTGGCGTAGCTCGACTTCCCGTAGCTGAAGTTCCTCCTGCCGTTGTAGGACCCCGTGTTCGACCTCATGTTGATGTTGTCGGTGTTGCAGATATAGTACCGGCTGTTCGTCTTCTTGCCGTAGTTCCACTTGAAGTTCTAGGCGGTGTTGTAGCTCCTGCCGTCGCACGTCGAGCGGCTGGTGATGGTCGTCTTGTGGGGGTAGCCGCTGCCGGGGCACGACGACGGGCTGTTGGTGATGGACTCGTGGGTCAGGCGGGACTCGTTTCTGGGGTTGCTCTTCGCGCTAGTGTACCAGGACGACCTCAAGCACTGGCGGCGGCCCTAGTGAGAGCCGTACCTGCTCGACATGTTCATTCCCT\n\n\n\n\nDseqrecord(-45)\nGGGATAGCGTGACCGGCGCATCGGTCACGCTATTTGTTGAG    \n    ATCGCACTGGCCGCGTAGCCAGTGCGATAAACAACTCGCTT\n\n\n\nname| 4\n     \\/\n     /\\\n      4|name| 4\n             \\/\n             /\\\n              4|name\n\n\n\npromoter_cut_product[1].figure()\n\n\nDseqrecord(-107)\nCTCCAGCTGTCACCGGATGTGCTTTCCGGTCTGATGAGTCCGTGAGGACGAAACAGCCTCTACAAATAATTTTGTTTAATCTAGAGATTAAAGAGGAGAAATA    \n    TCGACAGTGGCCTACACGAAAGGCCAGACTACTCAGGCACTCCTGCTTTGTCGGAGATGTTTATTAAAACAAATTAGATCTCTAATTTCTCCTCTTTATCAGT",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  },
  {
    "objectID": "design.html#assembly-with-wrong-fragments",
    "href": "design.html#assembly-with-wrong-fragments",
    "title": "2  Design",
    "section": "2.9 Assembly with wrong fragments",
    "text": "2.9 Assembly with wrong fragments\n\n\npromoter = read(\"data/parts/pUC19-J23100.gb\")\nterminator = read(\"data/parts/pUC19-L2U3H03.gb\")\nrbs = read(\"data/parts/pUC19-RB0030.gb\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Design</span>"
    ]
  }
]